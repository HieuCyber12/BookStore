package com.bookstore.model;
// Generated Oct 10, 2023, 5:06:29 PM by Hibernate Tools 4.3.6.Final

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;

import java.util.Base64;

import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.Lob;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.Table;
import javax.persistence.Transient;

/**
 * BookImages generated by hbm2java
 */
@Entity
@Table(name = "BookImages", schema = "dbo", catalog = "bookstore")
@NamedQueries({
    @NamedQuery(name = "BookImages.findByBookId", query = "SELECT b FROM BookImages b WHERE b.books.bookId = :bookId")
})

public class BookImages implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private Integer imageId;
	private Books books;
	
	private byte[] bookImg;
	private String base64Image;
	
	public BookImages() {
	}

	public BookImages(Books books, byte[] bookImg) {
		this.books = books;
		this.bookImg = bookImg;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "image_id", unique = true, nullable = false)
	public Integer getImageId() {
		return this.imageId;
	}

	public void setImageId(Integer imageId) {
		this.imageId = imageId;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "book_id", nullable = false)
	public Books getBooks() {
		return this.books;
	}

	public void setBooks(Books books) {
		this.books = books;
	}

	@Lob
	@Column(name = "book_img", nullable = false)
	public byte[] getBookImg() {
		return this.bookImg;
	}

	public void setBookImg(byte[] bookImg) {
		this.bookImg = bookImg;
	}


	@Transient
	public String getBase64Image() {
		this.base64Image = Base64.getEncoder().encodeToString(this.bookImg);
		return this.base64Image;
	}
	
	@Transient
	public void setBase64Image(String base64Image) {
		this.base64Image = base64Image;
	}
}
