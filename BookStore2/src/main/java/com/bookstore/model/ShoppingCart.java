package com.bookstore.model;
// Generated Oct 10, 2023, 5:06:29 PM by Hibernate Tools 4.3.6.Final

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * ShoppingCart generated by hbm2java
 */
@Entity
@Table(name = "ShoppingCart", schema = "dbo", catalog = "bookstore")
@NamedQueries({ @NamedQuery(name = "ShoppingCart.findAll", query = "SELECT sc FROM ShoppingCart sc ORDER BY sc.cartId"),
	@NamedQuery(name = "ShoppingCart.findByUser", query = "SELECT sc FROM ShoppingCart sc WHERE sc.users = :user ORDER BY sc.cartId"),
		@NamedQuery(name = "ShoppingCart.countAll", query = "SELECT COUNT(sc) FROM ShoppingCart sc"),
		@NamedQuery(name = "ShoppingCart.findItem", query = "SELECT sc FROM ShoppingCart sc WHERE sc.books = :book AND sc.users = :user"),
		@NamedQuery(name = "ShoppingCart.totalAmount", query = "SELECT SUM(sc.quantity * b.price) FROM ShoppingCart sc JOIN sc.books b WHERE sc.users = :user") })

public class ShoppingCart implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private Integer cartId;
	private Books books;
	private Users users;
	private int quantity;
	private Date createdAt;
	private Date updatedAt;
	public ShoppingCart() {
	}

	public ShoppingCart(int cartId, Books books, Users users, int quantity, Date createdAt) {
		this.cartId = cartId;
		this.books = books;
		this.users = users;
		this.quantity = quantity;
		this.createdAt = createdAt;
	}
	
	public ShoppingCart(Books books, Users users, int quantity, Date createdAt) {
		this.books = books;
		this.users = users;
		this.quantity = quantity;
		this.createdAt = createdAt;
	}

	public ShoppingCart(Books books, Users users, int quantity) {
		this.books = books;
		this.users = users;
		this.quantity = quantity;
	}
	
	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "cart_id", unique = true, nullable = false)
	public Integer getCartId() {
		return this.cartId;
	}

	public void setCartId(Integer cartId) {
		this.cartId = cartId;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "book_id", nullable = false)
	public Books getBooks() {
		return this.books;
	}

	public void setBooks(Books books) {
		this.books = books;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "user_id", nullable = false)
	public Users getUsers() {
		return this.users;
	}

	public void setUsers(Users users) {
		this.users = users;
	}

	@Column(name = "quantity", nullable = false)
	public int getQuantity() {
		return this.quantity;
	}

	public void setQuantity(int quantity) {
		this.quantity = quantity;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_at", nullable = false, length = 23)
	public Date getCreatedAt() {
		return this.createdAt;
	}

	public void setCreatedAt(Date createdAt) {
		this.createdAt = createdAt;
	}
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updated_at", nullable = false, length = 23)
	public Date getUpdatedAt() {
		return this.updatedAt;
	}

	public void setUpdatedAt(Date updatedAt) {
		this.updatedAt = updatedAt;
	}

}
