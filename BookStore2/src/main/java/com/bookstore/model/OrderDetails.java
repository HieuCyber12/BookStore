package com.bookstore.model;
// Generated Oct 10, 2023, 5:06:29 PM by Hibernate Tools 4.3.6.Final

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.Table;

/**
 * OrderDetails generated by hbm2java
 */
@Entity
@Table(name = "OrderDetails", schema = "dbo", catalog = "bookstore")
@NamedQueries({
		@NamedQuery(name = "OrderDetails.findAll", query = "SELECT od FROM OrderDetails od ORDER BY od.orderDetailId"),
		@NamedQuery(name = "OrderDetails.countQuantity", query = "SELECT SUM(od.quantity) FROM OrderDetails od Where od.orders.orderId = :orderId"),							
		@NamedQuery(name = "OrderDetails.bestSelling", query = "SELECT od.books FROM OrderDetails od GROUP BY od.books ORDER BY SUM(od.quantity) DESC") })

public class OrderDetails implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;

	private Integer orderDetailId;
	private Books books;
	private Orders orders;
	private Discounts discounts;
	private int quantity;
	private float subTotal;

	public OrderDetails() {
	}

	public OrderDetails(Books books, Orders orders, int quantity, float subTotal) {
		this.books = books;
		this.orders = orders;
		this.quantity = quantity;
		this.subTotal = subTotal;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "order_detail_id", unique = true, nullable = false)
	public Integer getOrderDetailId() {
		return this.orderDetailId;
	}

	public void setOrderDetailId(Integer orderDetailId) {
		this.orderDetailId = orderDetailId;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "book_id", nullable = false)
	public Books getBooks() {
		return this.books;
	}

	public void setBooks(Books books) {
		this.books = books;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "discount_id")
	public Discounts getDiscounts() {
		return this.discounts;
	}

	public void setDiscounts(Discounts discounts) {
		this.discounts = discounts;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "order_id", nullable = false)
	public Orders getOrders() {
		return this.orders;
	}

	public void setOrders(Orders orders) {
		this.orders = orders;
	}

	@Column(name = "quantity", nullable = false)
	public int getQuantity() {
		return this.quantity;
	}

	public void setQuantity(int quantity) {
		this.quantity = quantity;
	}

	@Column(name = "sub_total", nullable = false, precision = 10)
	public float getSubTotal() {
		return this.subTotal;
	}

	public void setSubTotal(float subTotal) {
		this.subTotal = subTotal;
	}

}
